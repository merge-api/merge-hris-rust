/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 * Generated by: https://openapi-generator.tech
 */

/// AvailableActions : # The AvailableActions Object ### Description The `Activity` object is used to see all available model/operation combinations for an integration.  ### Usage Example Fetch all the actions available for the `Zenefits` integration.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AvailableActions {
    #[serde(rename = "integration")]
    pub integration: Box<crate::models::AccountIntegration>,
    #[serde(rename = "passthrough_available")]
    pub passthrough_available: bool,
    #[serde(rename = "available_model_operations", skip_serializing_if = "Option::is_none")]
    pub available_model_operations: Option<Vec<crate::models::ModelOperation>>,
}

impl AvailableActions {
    /// # The AvailableActions Object ### Description The `Activity` object is used to see all available model/operation combinations for an integration.  ### Usage Example Fetch all the actions available for the `Zenefits` integration.
    pub fn new(integration: crate::models::AccountIntegration, passthrough_available: bool) -> AvailableActions {
        AvailableActions {
            integration: Box::new(integration),
            passthrough_available,
            available_model_operations: None,
        }
    }
}



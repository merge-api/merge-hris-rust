/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AccountIntegration {
    /// Company name.
    #[serde(rename = "name")]
    pub name: String,
    /// Category or categories this integration belongs to. Multiple categories should be comma separated.<br/><br>Example: For [ats, hris], enter <i>ats,hris</i>
    #[serde(rename = "categories", skip_serializing_if = "Option::is_none")]
    pub categories: Option<Vec<crate::models::CategoriesEnum>>,
    /// Company logo in rectangular shape. <b>Upload an image with a clear background.</b>
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    /// Company logo in square shape. <b>Upload an image with a white background.</b>
    #[serde(rename = "square_image", skip_serializing_if = "Option::is_none")]
    pub square_image: Option<String>,
    /// The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    #[serde(rename = "slug", skip_serializing_if = "Option::is_none")]
    pub slug: Option<String>,
}

impl AccountIntegration {
    pub fn new(name: String) -> AccountIntegration {
        AccountIntegration {
            name,
            categories: None,
            image: None,
            square_image: None,
            color: None,
            slug: None,
        }
    }
}



/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EndUserDetailsRequest {
    /// Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.
    #[serde(rename = "end_user_email_address")]
    pub end_user_email_address: String,
    /// Your end user's organization.
    #[serde(rename = "end_user_organization_name")]
    pub end_user_organization_name: String,
    /// This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.
    #[serde(rename = "end_user_origin_id")]
    pub end_user_origin_id: String,
    /// The integration categories to show in Merge Link.
    #[serde(rename = "categories")]
    pub categories: Vec<crate::models::CategoriesEnum>,
    /// The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.
    #[serde(rename = "integration", skip_serializing_if = "Option::is_none")]
    pub integration: Option<String>,
    /// An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.
    #[serde(rename = "link_expiry_mins", skip_serializing_if = "Option::is_none")]
    pub link_expiry_mins: Option<i32>,
    /// Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.
    #[serde(rename = "should_create_magic_link_url", skip_serializing_if = "Option::is_none")]
    pub should_create_magic_link_url: Option<bool>,
}

impl EndUserDetailsRequest {
    pub fn new(end_user_email_address: String, end_user_organization_name: String, end_user_origin_id: String, categories: Vec<crate::models::CategoriesEnum>) -> EndUserDetailsRequest {
        EndUserDetailsRequest {
            end_user_email_address,
            end_user_organization_name,
            end_user_origin_id,
            categories,
            integration: None,
            link_expiry_mins: None,
            should_create_magic_link_url: None,
        }
    }
}



/*
 * Merge HRIS API
 *
 * The unified API for building rich integrations with multiple HR Information System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 * Generated by: https://openapi-generator.tech
 */

/// BankInfo : # The BankInfo Object ### Description The `BankInfo` object is used to represent the Bank Account information for an Employee. This is often referenced with an Employee object.  ### Usage Example Fetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BankInfo {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The third-party API ID of the matching object.
    #[serde(rename = "remote_id", skip_serializing_if = "Option::is_none")]
    pub remote_id: Option<String>,
    /// The employee with this bank account.
    #[serde(rename = "employee", skip_serializing_if = "Option::is_none")]
    pub employee: Option<String>,
    /// The account number.
    #[serde(rename = "account_number", skip_serializing_if = "Option::is_none")]
    pub account_number: Option<String>,
    /// The routing number.
    #[serde(rename = "routing_number", skip_serializing_if = "Option::is_none")]
    pub routing_number: Option<String>,
    /// The bank name.
    #[serde(rename = "bank_name", skip_serializing_if = "Option::is_none")]
    pub bank_name: Option<String>,
    /// The bank account type
    #[serde(rename = "account_type", skip_serializing_if = "Option::is_none")]
    pub account_type: Option<Box<crate::models::AccountTypeEnum>>,
    /// When the matching bank object was created in the third party system.
    #[serde(rename = "remote_created_at", skip_serializing_if = "Option::is_none")]
    pub remote_created_at: Option<String>,
    #[serde(rename = "remote_data", skip_serializing_if = "Option::is_none")]
    pub remote_data: Option<Vec<crate::models::RemoteData>>,
    /// Indicates whether or not this object has been deleted by third party webhooks.
    #[serde(rename = "remote_was_deleted", skip_serializing_if = "Option::is_none")]
    pub remote_was_deleted: Option<bool>,
    #[serde(rename = "field_mappings", skip_serializing_if = "Option::is_none")]
    pub field_mappings: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl BankInfo {
    /// # The BankInfo Object ### Description The `BankInfo` object is used to represent the Bank Account information for an Employee. This is often referenced with an Employee object.  ### Usage Example Fetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.
    pub fn new() -> BankInfo {
        BankInfo {
            id: None,
            remote_id: None,
            employee: None,
            account_number: None,
            routing_number: None,
            bank_name: None,
            account_type: None,
            remote_created_at: None,
            remote_data: None,
            remote_was_deleted: None,
            field_mappings: None,
        }
    }
}


